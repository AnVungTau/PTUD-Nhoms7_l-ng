package gui;

import javax.swing.*;
import javax.swing.table.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class EditDeleteButtonsInTableExample extends JFrame{
	public EditDeleteButtonsInTableExample() {
	}
    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> {
            JFrame frame = new JFrame("Edit and Delete Buttons in Table Example");
            frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

            String[] headerPC = {"Mã CN", "Ngày PC", "Tên", "Sản phẩm", "Công đoạn", "Số lượng PC", "Số lượng làm", "Trạng thái", "Action"};
            DefaultTableModel modelPhanCong = new DefaultTableModel(headerPC, 0) {
                @Override
                public boolean isCellEditable(int row, int column) {
                    return false;
                }
            };

            JTable tblDSPhanCong = new JTable(modelPhanCong);
            tblDSPhanCong.getColumnModel().addColumn(new TableColumn(modelPhanCong.getColumnCount()));

            tblDSPhanCong.getColumnModel().getColumn(modelPhanCong.getColumnCount() - 1)
                    .setCellRenderer(new PanelRenderer());

            tblDSPhanCong.getColumnModel().getColumn(modelPhanCong.getColumnCount() - 1)
                    .setCellEditor(new PanelEditor());

            JScrollPane scrollPane = new JScrollPane(tblDSPhanCong);
            frame.add(scrollPane, BorderLayout.CENTER);

            frame.setSize(600, 400);
            frame.setLocationRelativeTo(null);
            frame.setVisible(true);
        });
    }

    static class PanelRenderer implements TableCellRenderer {
        private final JPanel panel = new JPanel();

        public PanelRenderer() {
            JButton editButton = new JButton("Sửa");
            editButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    // Thực hiện hành động khi nút Sửa được nhấp
                    JOptionPane.showMessageDialog(panel, "Sửa button clicked");
                }
            });

            JButton deleteButton = new JButton("Xóa");
            deleteButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    // Thực hiện hành động khi nút Xóa được nhấp
                    JOptionPane.showMessageDialog(panel, "Xóa button clicked");
                }
            });

            panel.add(editButton);
            panel.add(deleteButton);
        }

        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            return panel;
        }
    }

    static class PanelEditor extends AbstractCellEditor implements TableCellEditor {
        private final JPanel panel = new JPanel();

        public PanelEditor() {
            JButton editButton = new JButton("Sửa");
            editButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    // Thực hiện hành động khi nút Sửa được nhấp
                    JOptionPane.showMessageDialog(panel, "Sửa button clicked");
                    fireEditingStopped();
                }
            });

            JButton deleteButton = new JButton("Xóa");
            deleteButton.addActionListener(new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    // Thực hiện hành động khi nút Xóa được nhấp
                    JOptionPane.showMessageDialog(panel, "Xóa button clicked");
                    fireEditingStopped();
                }
            });

            panel.add(editButton);
            panel.add(deleteButton);
        }

        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row, int column) {
            return panel;
        }

        public Object getCellEditorValue() {
            return panel;
        }
    }
}
